[project]
name = "aap-enterprise-mcp-server"
version = "0.1.0"
description = "MCP Server for Ansible Automation Platform (AAP), Event-Driven Ansible (EDA), and Red Hat Documentation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Ansible Community"}
]
keywords = [
    "ansible",
    "automation",
    "mcp",
    "event-driven",
    "infrastructure",
    "redhat",
    "documentation",
    "openshift"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "httpx>=0.28.1",
    "mcp[cli]>=1.9.4",
    "urllib3>=2.0.0",
    "ansible-lint>=6.0.0",
    "ansible-core>=2.12.0",
    "fastapi>=0.118.0",
    "uvicorn>=0.34.3",
    "requests>=2.32.5",
    "pyyaml>=6.0.2",
    "pandas>=2.3.3",
    "scikit-learn>=1.7.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/sibilleb/AAP-Enterprise-MCP-Server"
Repository = "https://github.com/sibilleb/AAP-Enterprise-MCP-Server"
Issues = "https://github.com/sibilleb/AAP-Enterprise-MCP-Server/issues"
Documentation = "https://github.com/sibilleb/AAP-Enterprise-MCP-Server#readme"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["ansible.py", "eda.py", "ansible-lint.py", "redhat_docs.py"]

[tool.black]
line-length = 120
target-version = ['py311']

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[dependency-groups]
dev = [
    "ruff>=0.11.13",
]
